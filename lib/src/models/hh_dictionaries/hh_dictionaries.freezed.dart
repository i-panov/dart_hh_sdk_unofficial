// GENERATED CODE - DO NOT MODIFY BY HAND
// coverage:ignore-file
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'hh_dictionaries.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

// dart format off
T _$identity<T>(T value) => value;

/// @nodoc
mixin _$HhDictionaries {

@JsonKey(name: 'resume_access_type') IList<DictionaryItem> get resumeAccessTypes;@JsonKey(name: 'vacancy_search_order') IList<DictionaryItem> get vacancySearchOrders;@JsonKey(name: 'vacancy_search_fields') IList<DictionaryItem> get vacancySearchFields;@JsonKey(name: 'gender') IList<DictionaryItem> get gender;@JsonKey(name: 'preferred_contact_type') IList<DictionaryItem> get preferredContactTypes;@JsonKey(name: 'travel_time') IList<DictionaryItem> get travelTime;@JsonKey(name: 'relocation_type') IList<DictionaryItem> get relocationTypes;@JsonKey(name: 'business_trip_readiness') IList<DictionaryItem> get businessTripReadiness;@JsonKey(name: 'resume_contacts_site_type') IList<DictionaryItem> get resumeContactsSiteTypes;@JsonKey(name: 'employer_type') IList<DictionaryItem> get employerTypes;@JsonKey(name: 'employer_relation') IList<DictionaryItem> get employerRelations;@JsonKey(name: 'negotiations_state') IList<DictionaryItem> get negotiationsStates;@JsonKey(name: 'applicant_negotiation_status') IList<DictionaryItem> get applicantNegotiationStatuses;@JsonKey(name: 'negotiations_participant_type') IList<DictionaryItem> get negotiationsParticipantTypes;@JsonKey(name: 'negotiations_order') IList<DictionaryItem> get negotiationsOrders;@JsonKey(name: 'resume_moderation_note') IList<DictionaryItem> get resumeModerationNotes;@JsonKey(name: 'vacancy_relation') IList<DictionaryItem> get vacancyRelations;@JsonKey(name: 'resume_status') IList<DictionaryItem> get resumeStatuses;@JsonKey(name: 'resume_search_logic') IList<DictionaryItem> get resumeSearchLogics;@JsonKey(name: 'resume_search_fields') IList<DictionaryItem> get resumeSearchFields;@JsonKey(name: 'messaging_status') IList<DictionaryItem> get messagingStatuses;@JsonKey(name: 'employer_active_vacancies_order') IList<DictionaryItem> get employerActiveVacanciesOrders;@JsonKey(name: 'employer_archived_vacancies_order') IList<DictionaryItem> get employerArchivedVacanciesOrders;@JsonKey(name: 'employer_hidden_vacancies_order') IList<DictionaryItem> get employerHiddenVacanciesOrders;@JsonKey(name: 'applicant_comments_order') IList<DictionaryItem> get applicantCommentsOrders;@JsonKey(name: 'vacancy_not_prolonged_reason') IList<DictionaryItem> get vacancyNotProlongedReasons;@JsonKey(name: 'resume_hidden_fields') IList<DictionaryItem> get resumeHiddenFields;@JsonKey(name: 'phone_call_status') IList<DictionaryItem> get phoneCallStatuses;@JsonKey(name: 'vacancy_label') IList<DictionaryItem> get vacancyLabels;@JsonKey(name: 'experience') IList<DictionaryItem> get experiences;@JsonKey(name: 'employment') IList<DictionaryItem> get employments;@JsonKey(name: 'schedule') IList<DictionaryItem> get schedules;@JsonKey(name: 'education_level') IList<DictionaryItem> get educationLevels;@JsonKey(name: 'currency') IList<Currency> get currencies;@JsonKey(name: 'vacancy_billing_type') IList<DictionaryItem> get vacancyBillingTypes;@JsonKey(name: 'applicant_comment_access_type') IList<DictionaryItem> get applicantCommentAccessTypes;@JsonKey(name: 'vacancy_cluster') IList<DictionaryItem> get vacancyClusters;@JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson) ISet<String> get driverLicenseTypes;@JsonKey(name: 'language_level') IList<DictionaryItem> get languageLevels;@JsonKey(name: 'working_days') IList<DictionaryItem> get workingDays;@JsonKey(name: 'working_time_intervals') IList<DictionaryItem> get workingTimeIntervals;@JsonKey(name: 'working_time_modes') IList<DictionaryItem> get workingTimeModes;@JsonKey(name: 'vacancy_type') IList<DictionaryItem> get vacancyTypes;@JsonKey(name: 'job_search_statuses_applicant') IList<DictionaryItem> get jobSearchStatusesApplicants;@JsonKey(name: 'job_search_statuses_employer') IList<DictionaryItem> get jobSearchStatusesEmployers;@JsonKey(name: 'employment_form') IList<DictionaryItem> get employmentForms;@JsonKey(name: 'work_format') IList<DictionaryItem> get workFormats;@JsonKey(name: 'working_hours') IList<DictionaryItem> get workingHours;@JsonKey(name: 'fly_in_fly_out_duration') IList<DictionaryItem> get flyInFlyOutDurations;@JsonKey(name: 'work_schedule_by_days') IList<DictionaryItem> get workScheduleByDays;@JsonKey(name: 'salary_range_mode') IList<DictionaryItem> get salaryRangeModes;@JsonKey(name: 'salary_range_frequency') IList<DictionaryItem> get salaryRangeFrequencies;@JsonKey(name: 'resume_search_label') IList<DictionaryItem> get resumeSearchLabels;@JsonKey(name: 'resume_search_relocation') IList<DictionaryItem> get resumeSearchRelocations;@JsonKey(name: 'resume_search_order') IList<DictionaryItem> get resumeSearchOrders;@JsonKey(name: 'resume_search_experience_period') IList<DictionaryItem> get resumeSearchExperiencePeriods;
/// Create a copy of HhDictionaries
/// with the given fields replaced by the non-null parameter values.
@JsonKey(includeFromJson: false, includeToJson: false)
@pragma('vm:prefer-inline')
$HhDictionariesCopyWith<HhDictionaries> get copyWith => _$HhDictionariesCopyWithImpl<HhDictionaries>(this as HhDictionaries, _$identity);

  /// Serializes this HhDictionaries to a JSON map.
  Map<String, dynamic> toJson();


@override
bool operator ==(Object other) {
  return identical(this, other) || (other.runtimeType == runtimeType&&other is HhDictionaries&&const DeepCollectionEquality().equals(other.resumeAccessTypes, resumeAccessTypes)&&const DeepCollectionEquality().equals(other.vacancySearchOrders, vacancySearchOrders)&&const DeepCollectionEquality().equals(other.vacancySearchFields, vacancySearchFields)&&const DeepCollectionEquality().equals(other.gender, gender)&&const DeepCollectionEquality().equals(other.preferredContactTypes, preferredContactTypes)&&const DeepCollectionEquality().equals(other.travelTime, travelTime)&&const DeepCollectionEquality().equals(other.relocationTypes, relocationTypes)&&const DeepCollectionEquality().equals(other.businessTripReadiness, businessTripReadiness)&&const DeepCollectionEquality().equals(other.resumeContactsSiteTypes, resumeContactsSiteTypes)&&const DeepCollectionEquality().equals(other.employerTypes, employerTypes)&&const DeepCollectionEquality().equals(other.employerRelations, employerRelations)&&const DeepCollectionEquality().equals(other.negotiationsStates, negotiationsStates)&&const DeepCollectionEquality().equals(other.applicantNegotiationStatuses, applicantNegotiationStatuses)&&const DeepCollectionEquality().equals(other.negotiationsParticipantTypes, negotiationsParticipantTypes)&&const DeepCollectionEquality().equals(other.negotiationsOrders, negotiationsOrders)&&const DeepCollectionEquality().equals(other.resumeModerationNotes, resumeModerationNotes)&&const DeepCollectionEquality().equals(other.vacancyRelations, vacancyRelations)&&const DeepCollectionEquality().equals(other.resumeStatuses, resumeStatuses)&&const DeepCollectionEquality().equals(other.resumeSearchLogics, resumeSearchLogics)&&const DeepCollectionEquality().equals(other.resumeSearchFields, resumeSearchFields)&&const DeepCollectionEquality().equals(other.messagingStatuses, messagingStatuses)&&const DeepCollectionEquality().equals(other.employerActiveVacanciesOrders, employerActiveVacanciesOrders)&&const DeepCollectionEquality().equals(other.employerArchivedVacanciesOrders, employerArchivedVacanciesOrders)&&const DeepCollectionEquality().equals(other.employerHiddenVacanciesOrders, employerHiddenVacanciesOrders)&&const DeepCollectionEquality().equals(other.applicantCommentsOrders, applicantCommentsOrders)&&const DeepCollectionEquality().equals(other.vacancyNotProlongedReasons, vacancyNotProlongedReasons)&&const DeepCollectionEquality().equals(other.resumeHiddenFields, resumeHiddenFields)&&const DeepCollectionEquality().equals(other.phoneCallStatuses, phoneCallStatuses)&&const DeepCollectionEquality().equals(other.vacancyLabels, vacancyLabels)&&const DeepCollectionEquality().equals(other.experiences, experiences)&&const DeepCollectionEquality().equals(other.employments, employments)&&const DeepCollectionEquality().equals(other.schedules, schedules)&&const DeepCollectionEquality().equals(other.educationLevels, educationLevels)&&const DeepCollectionEquality().equals(other.currencies, currencies)&&const DeepCollectionEquality().equals(other.vacancyBillingTypes, vacancyBillingTypes)&&const DeepCollectionEquality().equals(other.applicantCommentAccessTypes, applicantCommentAccessTypes)&&const DeepCollectionEquality().equals(other.vacancyClusters, vacancyClusters)&&const DeepCollectionEquality().equals(other.driverLicenseTypes, driverLicenseTypes)&&const DeepCollectionEquality().equals(other.languageLevels, languageLevels)&&const DeepCollectionEquality().equals(other.workingDays, workingDays)&&const DeepCollectionEquality().equals(other.workingTimeIntervals, workingTimeIntervals)&&const DeepCollectionEquality().equals(other.workingTimeModes, workingTimeModes)&&const DeepCollectionEquality().equals(other.vacancyTypes, vacancyTypes)&&const DeepCollectionEquality().equals(other.jobSearchStatusesApplicants, jobSearchStatusesApplicants)&&const DeepCollectionEquality().equals(other.jobSearchStatusesEmployers, jobSearchStatusesEmployers)&&const DeepCollectionEquality().equals(other.employmentForms, employmentForms)&&const DeepCollectionEquality().equals(other.workFormats, workFormats)&&const DeepCollectionEquality().equals(other.workingHours, workingHours)&&const DeepCollectionEquality().equals(other.flyInFlyOutDurations, flyInFlyOutDurations)&&const DeepCollectionEquality().equals(other.workScheduleByDays, workScheduleByDays)&&const DeepCollectionEquality().equals(other.salaryRangeModes, salaryRangeModes)&&const DeepCollectionEquality().equals(other.salaryRangeFrequencies, salaryRangeFrequencies)&&const DeepCollectionEquality().equals(other.resumeSearchLabels, resumeSearchLabels)&&const DeepCollectionEquality().equals(other.resumeSearchRelocations, resumeSearchRelocations)&&const DeepCollectionEquality().equals(other.resumeSearchOrders, resumeSearchOrders)&&const DeepCollectionEquality().equals(other.resumeSearchExperiencePeriods, resumeSearchExperiencePeriods));
}

@JsonKey(includeFromJson: false, includeToJson: false)
@override
int get hashCode => Object.hashAll([runtimeType,const DeepCollectionEquality().hash(resumeAccessTypes),const DeepCollectionEquality().hash(vacancySearchOrders),const DeepCollectionEquality().hash(vacancySearchFields),const DeepCollectionEquality().hash(gender),const DeepCollectionEquality().hash(preferredContactTypes),const DeepCollectionEquality().hash(travelTime),const DeepCollectionEquality().hash(relocationTypes),const DeepCollectionEquality().hash(businessTripReadiness),const DeepCollectionEquality().hash(resumeContactsSiteTypes),const DeepCollectionEquality().hash(employerTypes),const DeepCollectionEquality().hash(employerRelations),const DeepCollectionEquality().hash(negotiationsStates),const DeepCollectionEquality().hash(applicantNegotiationStatuses),const DeepCollectionEquality().hash(negotiationsParticipantTypes),const DeepCollectionEquality().hash(negotiationsOrders),const DeepCollectionEquality().hash(resumeModerationNotes),const DeepCollectionEquality().hash(vacancyRelations),const DeepCollectionEquality().hash(resumeStatuses),const DeepCollectionEquality().hash(resumeSearchLogics),const DeepCollectionEquality().hash(resumeSearchFields),const DeepCollectionEquality().hash(messagingStatuses),const DeepCollectionEquality().hash(employerActiveVacanciesOrders),const DeepCollectionEquality().hash(employerArchivedVacanciesOrders),const DeepCollectionEquality().hash(employerHiddenVacanciesOrders),const DeepCollectionEquality().hash(applicantCommentsOrders),const DeepCollectionEquality().hash(vacancyNotProlongedReasons),const DeepCollectionEquality().hash(resumeHiddenFields),const DeepCollectionEquality().hash(phoneCallStatuses),const DeepCollectionEquality().hash(vacancyLabels),const DeepCollectionEquality().hash(experiences),const DeepCollectionEquality().hash(employments),const DeepCollectionEquality().hash(schedules),const DeepCollectionEquality().hash(educationLevels),const DeepCollectionEquality().hash(currencies),const DeepCollectionEquality().hash(vacancyBillingTypes),const DeepCollectionEquality().hash(applicantCommentAccessTypes),const DeepCollectionEquality().hash(vacancyClusters),const DeepCollectionEquality().hash(driverLicenseTypes),const DeepCollectionEquality().hash(languageLevels),const DeepCollectionEquality().hash(workingDays),const DeepCollectionEquality().hash(workingTimeIntervals),const DeepCollectionEquality().hash(workingTimeModes),const DeepCollectionEquality().hash(vacancyTypes),const DeepCollectionEquality().hash(jobSearchStatusesApplicants),const DeepCollectionEquality().hash(jobSearchStatusesEmployers),const DeepCollectionEquality().hash(employmentForms),const DeepCollectionEquality().hash(workFormats),const DeepCollectionEquality().hash(workingHours),const DeepCollectionEquality().hash(flyInFlyOutDurations),const DeepCollectionEquality().hash(workScheduleByDays),const DeepCollectionEquality().hash(salaryRangeModes),const DeepCollectionEquality().hash(salaryRangeFrequencies),const DeepCollectionEquality().hash(resumeSearchLabels),const DeepCollectionEquality().hash(resumeSearchRelocations),const DeepCollectionEquality().hash(resumeSearchOrders),const DeepCollectionEquality().hash(resumeSearchExperiencePeriods)]);

@override
String toString() {
  return 'HhDictionaries(resumeAccessTypes: $resumeAccessTypes, vacancySearchOrders: $vacancySearchOrders, vacancySearchFields: $vacancySearchFields, gender: $gender, preferredContactTypes: $preferredContactTypes, travelTime: $travelTime, relocationTypes: $relocationTypes, businessTripReadiness: $businessTripReadiness, resumeContactsSiteTypes: $resumeContactsSiteTypes, employerTypes: $employerTypes, employerRelations: $employerRelations, negotiationsStates: $negotiationsStates, applicantNegotiationStatuses: $applicantNegotiationStatuses, negotiationsParticipantTypes: $negotiationsParticipantTypes, negotiationsOrders: $negotiationsOrders, resumeModerationNotes: $resumeModerationNotes, vacancyRelations: $vacancyRelations, resumeStatuses: $resumeStatuses, resumeSearchLogics: $resumeSearchLogics, resumeSearchFields: $resumeSearchFields, messagingStatuses: $messagingStatuses, employerActiveVacanciesOrders: $employerActiveVacanciesOrders, employerArchivedVacanciesOrders: $employerArchivedVacanciesOrders, employerHiddenVacanciesOrders: $employerHiddenVacanciesOrders, applicantCommentsOrders: $applicantCommentsOrders, vacancyNotProlongedReasons: $vacancyNotProlongedReasons, resumeHiddenFields: $resumeHiddenFields, phoneCallStatuses: $phoneCallStatuses, vacancyLabels: $vacancyLabels, experiences: $experiences, employments: $employments, schedules: $schedules, educationLevels: $educationLevels, currencies: $currencies, vacancyBillingTypes: $vacancyBillingTypes, applicantCommentAccessTypes: $applicantCommentAccessTypes, vacancyClusters: $vacancyClusters, driverLicenseTypes: $driverLicenseTypes, languageLevels: $languageLevels, workingDays: $workingDays, workingTimeIntervals: $workingTimeIntervals, workingTimeModes: $workingTimeModes, vacancyTypes: $vacancyTypes, jobSearchStatusesApplicants: $jobSearchStatusesApplicants, jobSearchStatusesEmployers: $jobSearchStatusesEmployers, employmentForms: $employmentForms, workFormats: $workFormats, workingHours: $workingHours, flyInFlyOutDurations: $flyInFlyOutDurations, workScheduleByDays: $workScheduleByDays, salaryRangeModes: $salaryRangeModes, salaryRangeFrequencies: $salaryRangeFrequencies, resumeSearchLabels: $resumeSearchLabels, resumeSearchRelocations: $resumeSearchRelocations, resumeSearchOrders: $resumeSearchOrders, resumeSearchExperiencePeriods: $resumeSearchExperiencePeriods)';
}


}

/// @nodoc
abstract mixin class $HhDictionariesCopyWith<$Res>  {
  factory $HhDictionariesCopyWith(HhDictionaries value, $Res Function(HhDictionaries) _then) = _$HhDictionariesCopyWithImpl;
@useResult
$Res call({
@JsonKey(name: 'resume_access_type') IList<DictionaryItem> resumeAccessTypes,@JsonKey(name: 'vacancy_search_order') IList<DictionaryItem> vacancySearchOrders,@JsonKey(name: 'vacancy_search_fields') IList<DictionaryItem> vacancySearchFields,@JsonKey(name: 'gender') IList<DictionaryItem> gender,@JsonKey(name: 'preferred_contact_type') IList<DictionaryItem> preferredContactTypes,@JsonKey(name: 'travel_time') IList<DictionaryItem> travelTime,@JsonKey(name: 'relocation_type') IList<DictionaryItem> relocationTypes,@JsonKey(name: 'business_trip_readiness') IList<DictionaryItem> businessTripReadiness,@JsonKey(name: 'resume_contacts_site_type') IList<DictionaryItem> resumeContactsSiteTypes,@JsonKey(name: 'employer_type') IList<DictionaryItem> employerTypes,@JsonKey(name: 'employer_relation') IList<DictionaryItem> employerRelations,@JsonKey(name: 'negotiations_state') IList<DictionaryItem> negotiationsStates,@JsonKey(name: 'applicant_negotiation_status') IList<DictionaryItem> applicantNegotiationStatuses,@JsonKey(name: 'negotiations_participant_type') IList<DictionaryItem> negotiationsParticipantTypes,@JsonKey(name: 'negotiations_order') IList<DictionaryItem> negotiationsOrders,@JsonKey(name: 'resume_moderation_note') IList<DictionaryItem> resumeModerationNotes,@JsonKey(name: 'vacancy_relation') IList<DictionaryItem> vacancyRelations,@JsonKey(name: 'resume_status') IList<DictionaryItem> resumeStatuses,@JsonKey(name: 'resume_search_logic') IList<DictionaryItem> resumeSearchLogics,@JsonKey(name: 'resume_search_fields') IList<DictionaryItem> resumeSearchFields,@JsonKey(name: 'messaging_status') IList<DictionaryItem> messagingStatuses,@JsonKey(name: 'employer_active_vacancies_order') IList<DictionaryItem> employerActiveVacanciesOrders,@JsonKey(name: 'employer_archived_vacancies_order') IList<DictionaryItem> employerArchivedVacanciesOrders,@JsonKey(name: 'employer_hidden_vacancies_order') IList<DictionaryItem> employerHiddenVacanciesOrders,@JsonKey(name: 'applicant_comments_order') IList<DictionaryItem> applicantCommentsOrders,@JsonKey(name: 'vacancy_not_prolonged_reason') IList<DictionaryItem> vacancyNotProlongedReasons,@JsonKey(name: 'resume_hidden_fields') IList<DictionaryItem> resumeHiddenFields,@JsonKey(name: 'phone_call_status') IList<DictionaryItem> phoneCallStatuses,@JsonKey(name: 'vacancy_label') IList<DictionaryItem> vacancyLabels,@JsonKey(name: 'experience') IList<DictionaryItem> experiences,@JsonKey(name: 'employment') IList<DictionaryItem> employments,@JsonKey(name: 'schedule') IList<DictionaryItem> schedules,@JsonKey(name: 'education_level') IList<DictionaryItem> educationLevels,@JsonKey(name: 'currency') IList<Currency> currencies,@JsonKey(name: 'vacancy_billing_type') IList<DictionaryItem> vacancyBillingTypes,@JsonKey(name: 'applicant_comment_access_type') IList<DictionaryItem> applicantCommentAccessTypes,@JsonKey(name: 'vacancy_cluster') IList<DictionaryItem> vacancyClusters,@JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson) ISet<String> driverLicenseTypes,@JsonKey(name: 'language_level') IList<DictionaryItem> languageLevels,@JsonKey(name: 'working_days') IList<DictionaryItem> workingDays,@JsonKey(name: 'working_time_intervals') IList<DictionaryItem> workingTimeIntervals,@JsonKey(name: 'working_time_modes') IList<DictionaryItem> workingTimeModes,@JsonKey(name: 'vacancy_type') IList<DictionaryItem> vacancyTypes,@JsonKey(name: 'job_search_statuses_applicant') IList<DictionaryItem> jobSearchStatusesApplicants,@JsonKey(name: 'job_search_statuses_employer') IList<DictionaryItem> jobSearchStatusesEmployers,@JsonKey(name: 'employment_form') IList<DictionaryItem> employmentForms,@JsonKey(name: 'work_format') IList<DictionaryItem> workFormats,@JsonKey(name: 'working_hours') IList<DictionaryItem> workingHours,@JsonKey(name: 'fly_in_fly_out_duration') IList<DictionaryItem> flyInFlyOutDurations,@JsonKey(name: 'work_schedule_by_days') IList<DictionaryItem> workScheduleByDays,@JsonKey(name: 'salary_range_mode') IList<DictionaryItem> salaryRangeModes,@JsonKey(name: 'salary_range_frequency') IList<DictionaryItem> salaryRangeFrequencies,@JsonKey(name: 'resume_search_label') IList<DictionaryItem> resumeSearchLabels,@JsonKey(name: 'resume_search_relocation') IList<DictionaryItem> resumeSearchRelocations,@JsonKey(name: 'resume_search_order') IList<DictionaryItem> resumeSearchOrders,@JsonKey(name: 'resume_search_experience_period') IList<DictionaryItem> resumeSearchExperiencePeriods
});




}
/// @nodoc
class _$HhDictionariesCopyWithImpl<$Res>
    implements $HhDictionariesCopyWith<$Res> {
  _$HhDictionariesCopyWithImpl(this._self, this._then);

  final HhDictionaries _self;
  final $Res Function(HhDictionaries) _then;

/// Create a copy of HhDictionaries
/// with the given fields replaced by the non-null parameter values.
@pragma('vm:prefer-inline') @override $Res call({Object? resumeAccessTypes = null,Object? vacancySearchOrders = null,Object? vacancySearchFields = null,Object? gender = null,Object? preferredContactTypes = null,Object? travelTime = null,Object? relocationTypes = null,Object? businessTripReadiness = null,Object? resumeContactsSiteTypes = null,Object? employerTypes = null,Object? employerRelations = null,Object? negotiationsStates = null,Object? applicantNegotiationStatuses = null,Object? negotiationsParticipantTypes = null,Object? negotiationsOrders = null,Object? resumeModerationNotes = null,Object? vacancyRelations = null,Object? resumeStatuses = null,Object? resumeSearchLogics = null,Object? resumeSearchFields = null,Object? messagingStatuses = null,Object? employerActiveVacanciesOrders = null,Object? employerArchivedVacanciesOrders = null,Object? employerHiddenVacanciesOrders = null,Object? applicantCommentsOrders = null,Object? vacancyNotProlongedReasons = null,Object? resumeHiddenFields = null,Object? phoneCallStatuses = null,Object? vacancyLabels = null,Object? experiences = null,Object? employments = null,Object? schedules = null,Object? educationLevels = null,Object? currencies = null,Object? vacancyBillingTypes = null,Object? applicantCommentAccessTypes = null,Object? vacancyClusters = null,Object? driverLicenseTypes = null,Object? languageLevels = null,Object? workingDays = null,Object? workingTimeIntervals = null,Object? workingTimeModes = null,Object? vacancyTypes = null,Object? jobSearchStatusesApplicants = null,Object? jobSearchStatusesEmployers = null,Object? employmentForms = null,Object? workFormats = null,Object? workingHours = null,Object? flyInFlyOutDurations = null,Object? workScheduleByDays = null,Object? salaryRangeModes = null,Object? salaryRangeFrequencies = null,Object? resumeSearchLabels = null,Object? resumeSearchRelocations = null,Object? resumeSearchOrders = null,Object? resumeSearchExperiencePeriods = null,}) {
  return _then(_self.copyWith(
resumeAccessTypes: null == resumeAccessTypes ? _self.resumeAccessTypes : resumeAccessTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancySearchOrders: null == vacancySearchOrders ? _self.vacancySearchOrders : vacancySearchOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancySearchFields: null == vacancySearchFields ? _self.vacancySearchFields : vacancySearchFields // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,gender: null == gender ? _self.gender : gender // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,preferredContactTypes: null == preferredContactTypes ? _self.preferredContactTypes : preferredContactTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,travelTime: null == travelTime ? _self.travelTime : travelTime // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,relocationTypes: null == relocationTypes ? _self.relocationTypes : relocationTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,businessTripReadiness: null == businessTripReadiness ? _self.businessTripReadiness : businessTripReadiness // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeContactsSiteTypes: null == resumeContactsSiteTypes ? _self.resumeContactsSiteTypes : resumeContactsSiteTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerTypes: null == employerTypes ? _self.employerTypes : employerTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerRelations: null == employerRelations ? _self.employerRelations : employerRelations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,negotiationsStates: null == negotiationsStates ? _self.negotiationsStates : negotiationsStates // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,applicantNegotiationStatuses: null == applicantNegotiationStatuses ? _self.applicantNegotiationStatuses : applicantNegotiationStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,negotiationsParticipantTypes: null == negotiationsParticipantTypes ? _self.negotiationsParticipantTypes : negotiationsParticipantTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,negotiationsOrders: null == negotiationsOrders ? _self.negotiationsOrders : negotiationsOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeModerationNotes: null == resumeModerationNotes ? _self.resumeModerationNotes : resumeModerationNotes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyRelations: null == vacancyRelations ? _self.vacancyRelations : vacancyRelations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeStatuses: null == resumeStatuses ? _self.resumeStatuses : resumeStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchLogics: null == resumeSearchLogics ? _self.resumeSearchLogics : resumeSearchLogics // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchFields: null == resumeSearchFields ? _self.resumeSearchFields : resumeSearchFields // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,messagingStatuses: null == messagingStatuses ? _self.messagingStatuses : messagingStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerActiveVacanciesOrders: null == employerActiveVacanciesOrders ? _self.employerActiveVacanciesOrders : employerActiveVacanciesOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerArchivedVacanciesOrders: null == employerArchivedVacanciesOrders ? _self.employerArchivedVacanciesOrders : employerArchivedVacanciesOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerHiddenVacanciesOrders: null == employerHiddenVacanciesOrders ? _self.employerHiddenVacanciesOrders : employerHiddenVacanciesOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,applicantCommentsOrders: null == applicantCommentsOrders ? _self.applicantCommentsOrders : applicantCommentsOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyNotProlongedReasons: null == vacancyNotProlongedReasons ? _self.vacancyNotProlongedReasons : vacancyNotProlongedReasons // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeHiddenFields: null == resumeHiddenFields ? _self.resumeHiddenFields : resumeHiddenFields // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,phoneCallStatuses: null == phoneCallStatuses ? _self.phoneCallStatuses : phoneCallStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyLabels: null == vacancyLabels ? _self.vacancyLabels : vacancyLabels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,experiences: null == experiences ? _self.experiences : experiences // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employments: null == employments ? _self.employments : employments // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,schedules: null == schedules ? _self.schedules : schedules // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,educationLevels: null == educationLevels ? _self.educationLevels : educationLevels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,currencies: null == currencies ? _self.currencies : currencies // ignore: cast_nullable_to_non_nullable
as IList<Currency>,vacancyBillingTypes: null == vacancyBillingTypes ? _self.vacancyBillingTypes : vacancyBillingTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,applicantCommentAccessTypes: null == applicantCommentAccessTypes ? _self.applicantCommentAccessTypes : applicantCommentAccessTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyClusters: null == vacancyClusters ? _self.vacancyClusters : vacancyClusters // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,driverLicenseTypes: null == driverLicenseTypes ? _self.driverLicenseTypes : driverLicenseTypes // ignore: cast_nullable_to_non_nullable
as ISet<String>,languageLevels: null == languageLevels ? _self.languageLevels : languageLevels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingDays: null == workingDays ? _self.workingDays : workingDays // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingTimeIntervals: null == workingTimeIntervals ? _self.workingTimeIntervals : workingTimeIntervals // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingTimeModes: null == workingTimeModes ? _self.workingTimeModes : workingTimeModes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyTypes: null == vacancyTypes ? _self.vacancyTypes : vacancyTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,jobSearchStatusesApplicants: null == jobSearchStatusesApplicants ? _self.jobSearchStatusesApplicants : jobSearchStatusesApplicants // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,jobSearchStatusesEmployers: null == jobSearchStatusesEmployers ? _self.jobSearchStatusesEmployers : jobSearchStatusesEmployers // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employmentForms: null == employmentForms ? _self.employmentForms : employmentForms // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workFormats: null == workFormats ? _self.workFormats : workFormats // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingHours: null == workingHours ? _self.workingHours : workingHours // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,flyInFlyOutDurations: null == flyInFlyOutDurations ? _self.flyInFlyOutDurations : flyInFlyOutDurations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workScheduleByDays: null == workScheduleByDays ? _self.workScheduleByDays : workScheduleByDays // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,salaryRangeModes: null == salaryRangeModes ? _self.salaryRangeModes : salaryRangeModes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,salaryRangeFrequencies: null == salaryRangeFrequencies ? _self.salaryRangeFrequencies : salaryRangeFrequencies // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchLabels: null == resumeSearchLabels ? _self.resumeSearchLabels : resumeSearchLabels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchRelocations: null == resumeSearchRelocations ? _self.resumeSearchRelocations : resumeSearchRelocations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchOrders: null == resumeSearchOrders ? _self.resumeSearchOrders : resumeSearchOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchExperiencePeriods: null == resumeSearchExperiencePeriods ? _self.resumeSearchExperiencePeriods : resumeSearchExperiencePeriods // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,
  ));
}

}


/// Adds pattern-matching-related methods to [HhDictionaries].
extension HhDictionariesPatterns on HhDictionaries {
/// A variant of `map` that fallback to returning `orElse`.
///
/// It is equivalent to doing:
/// ```dart
/// switch (sealedClass) {
///   case final Subclass value:
///     return ...;
///   case _:
///     return orElse();
/// }
/// ```

@optionalTypeArgs TResult maybeMap<TResult extends Object?>(TResult Function( _HhDictionaries value)?  $default,{required TResult orElse(),}){
final _that = this;
switch (_that) {
case _HhDictionaries() when $default != null:
return $default(_that);case _:
  return orElse();

}
}
/// A `switch`-like method, using callbacks.
///
/// Callbacks receives the raw object, upcasted.
/// It is equivalent to doing:
/// ```dart
/// switch (sealedClass) {
///   case final Subclass value:
///     return ...;
///   case final Subclass2 value:
///     return ...;
/// }
/// ```

@optionalTypeArgs TResult map<TResult extends Object?>(TResult Function( _HhDictionaries value)  $default,){
final _that = this;
switch (_that) {
case _HhDictionaries():
return $default(_that);case _:
  throw StateError('Unexpected subclass');

}
}
/// A variant of `map` that fallback to returning `null`.
///
/// It is equivalent to doing:
/// ```dart
/// switch (sealedClass) {
///   case final Subclass value:
///     return ...;
///   case _:
///     return null;
/// }
/// ```

@optionalTypeArgs TResult? mapOrNull<TResult extends Object?>(TResult? Function( _HhDictionaries value)?  $default,){
final _that = this;
switch (_that) {
case _HhDictionaries() when $default != null:
return $default(_that);case _:
  return null;

}
}
/// A variant of `when` that fallback to an `orElse` callback.
///
/// It is equivalent to doing:
/// ```dart
/// switch (sealedClass) {
///   case Subclass(:final field):
///     return ...;
///   case _:
///     return orElse();
/// }
/// ```

@optionalTypeArgs TResult maybeWhen<TResult extends Object?>(TResult Function(@JsonKey(name: 'resume_access_type')  IList<DictionaryItem> resumeAccessTypes, @JsonKey(name: 'vacancy_search_order')  IList<DictionaryItem> vacancySearchOrders, @JsonKey(name: 'vacancy_search_fields')  IList<DictionaryItem> vacancySearchFields, @JsonKey(name: 'gender')  IList<DictionaryItem> gender, @JsonKey(name: 'preferred_contact_type')  IList<DictionaryItem> preferredContactTypes, @JsonKey(name: 'travel_time')  IList<DictionaryItem> travelTime, @JsonKey(name: 'relocation_type')  IList<DictionaryItem> relocationTypes, @JsonKey(name: 'business_trip_readiness')  IList<DictionaryItem> businessTripReadiness, @JsonKey(name: 'resume_contacts_site_type')  IList<DictionaryItem> resumeContactsSiteTypes, @JsonKey(name: 'employer_type')  IList<DictionaryItem> employerTypes, @JsonKey(name: 'employer_relation')  IList<DictionaryItem> employerRelations, @JsonKey(name: 'negotiations_state')  IList<DictionaryItem> negotiationsStates, @JsonKey(name: 'applicant_negotiation_status')  IList<DictionaryItem> applicantNegotiationStatuses, @JsonKey(name: 'negotiations_participant_type')  IList<DictionaryItem> negotiationsParticipantTypes, @JsonKey(name: 'negotiations_order')  IList<DictionaryItem> negotiationsOrders, @JsonKey(name: 'resume_moderation_note')  IList<DictionaryItem> resumeModerationNotes, @JsonKey(name: 'vacancy_relation')  IList<DictionaryItem> vacancyRelations, @JsonKey(name: 'resume_status')  IList<DictionaryItem> resumeStatuses, @JsonKey(name: 'resume_search_logic')  IList<DictionaryItem> resumeSearchLogics, @JsonKey(name: 'resume_search_fields')  IList<DictionaryItem> resumeSearchFields, @JsonKey(name: 'messaging_status')  IList<DictionaryItem> messagingStatuses, @JsonKey(name: 'employer_active_vacancies_order')  IList<DictionaryItem> employerActiveVacanciesOrders, @JsonKey(name: 'employer_archived_vacancies_order')  IList<DictionaryItem> employerArchivedVacanciesOrders, @JsonKey(name: 'employer_hidden_vacancies_order')  IList<DictionaryItem> employerHiddenVacanciesOrders, @JsonKey(name: 'applicant_comments_order')  IList<DictionaryItem> applicantCommentsOrders, @JsonKey(name: 'vacancy_not_prolonged_reason')  IList<DictionaryItem> vacancyNotProlongedReasons, @JsonKey(name: 'resume_hidden_fields')  IList<DictionaryItem> resumeHiddenFields, @JsonKey(name: 'phone_call_status')  IList<DictionaryItem> phoneCallStatuses, @JsonKey(name: 'vacancy_label')  IList<DictionaryItem> vacancyLabels, @JsonKey(name: 'experience')  IList<DictionaryItem> experiences, @JsonKey(name: 'employment')  IList<DictionaryItem> employments, @JsonKey(name: 'schedule')  IList<DictionaryItem> schedules, @JsonKey(name: 'education_level')  IList<DictionaryItem> educationLevels, @JsonKey(name: 'currency')  IList<Currency> currencies, @JsonKey(name: 'vacancy_billing_type')  IList<DictionaryItem> vacancyBillingTypes, @JsonKey(name: 'applicant_comment_access_type')  IList<DictionaryItem> applicantCommentAccessTypes, @JsonKey(name: 'vacancy_cluster')  IList<DictionaryItem> vacancyClusters, @JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson)  ISet<String> driverLicenseTypes, @JsonKey(name: 'language_level')  IList<DictionaryItem> languageLevels, @JsonKey(name: 'working_days')  IList<DictionaryItem> workingDays, @JsonKey(name: 'working_time_intervals')  IList<DictionaryItem> workingTimeIntervals, @JsonKey(name: 'working_time_modes')  IList<DictionaryItem> workingTimeModes, @JsonKey(name: 'vacancy_type')  IList<DictionaryItem> vacancyTypes, @JsonKey(name: 'job_search_statuses_applicant')  IList<DictionaryItem> jobSearchStatusesApplicants, @JsonKey(name: 'job_search_statuses_employer')  IList<DictionaryItem> jobSearchStatusesEmployers, @JsonKey(name: 'employment_form')  IList<DictionaryItem> employmentForms, @JsonKey(name: 'work_format')  IList<DictionaryItem> workFormats, @JsonKey(name: 'working_hours')  IList<DictionaryItem> workingHours, @JsonKey(name: 'fly_in_fly_out_duration')  IList<DictionaryItem> flyInFlyOutDurations, @JsonKey(name: 'work_schedule_by_days')  IList<DictionaryItem> workScheduleByDays, @JsonKey(name: 'salary_range_mode')  IList<DictionaryItem> salaryRangeModes, @JsonKey(name: 'salary_range_frequency')  IList<DictionaryItem> salaryRangeFrequencies, @JsonKey(name: 'resume_search_label')  IList<DictionaryItem> resumeSearchLabels, @JsonKey(name: 'resume_search_relocation')  IList<DictionaryItem> resumeSearchRelocations, @JsonKey(name: 'resume_search_order')  IList<DictionaryItem> resumeSearchOrders, @JsonKey(name: 'resume_search_experience_period')  IList<DictionaryItem> resumeSearchExperiencePeriods)?  $default,{required TResult orElse(),}) {final _that = this;
switch (_that) {
case _HhDictionaries() when $default != null:
return $default(_that.resumeAccessTypes,_that.vacancySearchOrders,_that.vacancySearchFields,_that.gender,_that.preferredContactTypes,_that.travelTime,_that.relocationTypes,_that.businessTripReadiness,_that.resumeContactsSiteTypes,_that.employerTypes,_that.employerRelations,_that.negotiationsStates,_that.applicantNegotiationStatuses,_that.negotiationsParticipantTypes,_that.negotiationsOrders,_that.resumeModerationNotes,_that.vacancyRelations,_that.resumeStatuses,_that.resumeSearchLogics,_that.resumeSearchFields,_that.messagingStatuses,_that.employerActiveVacanciesOrders,_that.employerArchivedVacanciesOrders,_that.employerHiddenVacanciesOrders,_that.applicantCommentsOrders,_that.vacancyNotProlongedReasons,_that.resumeHiddenFields,_that.phoneCallStatuses,_that.vacancyLabels,_that.experiences,_that.employments,_that.schedules,_that.educationLevels,_that.currencies,_that.vacancyBillingTypes,_that.applicantCommentAccessTypes,_that.vacancyClusters,_that.driverLicenseTypes,_that.languageLevels,_that.workingDays,_that.workingTimeIntervals,_that.workingTimeModes,_that.vacancyTypes,_that.jobSearchStatusesApplicants,_that.jobSearchStatusesEmployers,_that.employmentForms,_that.workFormats,_that.workingHours,_that.flyInFlyOutDurations,_that.workScheduleByDays,_that.salaryRangeModes,_that.salaryRangeFrequencies,_that.resumeSearchLabels,_that.resumeSearchRelocations,_that.resumeSearchOrders,_that.resumeSearchExperiencePeriods);case _:
  return orElse();

}
}
/// A `switch`-like method, using callbacks.
///
/// As opposed to `map`, this offers destructuring.
/// It is equivalent to doing:
/// ```dart
/// switch (sealedClass) {
///   case Subclass(:final field):
///     return ...;
///   case Subclass2(:final field2):
///     return ...;
/// }
/// ```

@optionalTypeArgs TResult when<TResult extends Object?>(TResult Function(@JsonKey(name: 'resume_access_type')  IList<DictionaryItem> resumeAccessTypes, @JsonKey(name: 'vacancy_search_order')  IList<DictionaryItem> vacancySearchOrders, @JsonKey(name: 'vacancy_search_fields')  IList<DictionaryItem> vacancySearchFields, @JsonKey(name: 'gender')  IList<DictionaryItem> gender, @JsonKey(name: 'preferred_contact_type')  IList<DictionaryItem> preferredContactTypes, @JsonKey(name: 'travel_time')  IList<DictionaryItem> travelTime, @JsonKey(name: 'relocation_type')  IList<DictionaryItem> relocationTypes, @JsonKey(name: 'business_trip_readiness')  IList<DictionaryItem> businessTripReadiness, @JsonKey(name: 'resume_contacts_site_type')  IList<DictionaryItem> resumeContactsSiteTypes, @JsonKey(name: 'employer_type')  IList<DictionaryItem> employerTypes, @JsonKey(name: 'employer_relation')  IList<DictionaryItem> employerRelations, @JsonKey(name: 'negotiations_state')  IList<DictionaryItem> negotiationsStates, @JsonKey(name: 'applicant_negotiation_status')  IList<DictionaryItem> applicantNegotiationStatuses, @JsonKey(name: 'negotiations_participant_type')  IList<DictionaryItem> negotiationsParticipantTypes, @JsonKey(name: 'negotiations_order')  IList<DictionaryItem> negotiationsOrders, @JsonKey(name: 'resume_moderation_note')  IList<DictionaryItem> resumeModerationNotes, @JsonKey(name: 'vacancy_relation')  IList<DictionaryItem> vacancyRelations, @JsonKey(name: 'resume_status')  IList<DictionaryItem> resumeStatuses, @JsonKey(name: 'resume_search_logic')  IList<DictionaryItem> resumeSearchLogics, @JsonKey(name: 'resume_search_fields')  IList<DictionaryItem> resumeSearchFields, @JsonKey(name: 'messaging_status')  IList<DictionaryItem> messagingStatuses, @JsonKey(name: 'employer_active_vacancies_order')  IList<DictionaryItem> employerActiveVacanciesOrders, @JsonKey(name: 'employer_archived_vacancies_order')  IList<DictionaryItem> employerArchivedVacanciesOrders, @JsonKey(name: 'employer_hidden_vacancies_order')  IList<DictionaryItem> employerHiddenVacanciesOrders, @JsonKey(name: 'applicant_comments_order')  IList<DictionaryItem> applicantCommentsOrders, @JsonKey(name: 'vacancy_not_prolonged_reason')  IList<DictionaryItem> vacancyNotProlongedReasons, @JsonKey(name: 'resume_hidden_fields')  IList<DictionaryItem> resumeHiddenFields, @JsonKey(name: 'phone_call_status')  IList<DictionaryItem> phoneCallStatuses, @JsonKey(name: 'vacancy_label')  IList<DictionaryItem> vacancyLabels, @JsonKey(name: 'experience')  IList<DictionaryItem> experiences, @JsonKey(name: 'employment')  IList<DictionaryItem> employments, @JsonKey(name: 'schedule')  IList<DictionaryItem> schedules, @JsonKey(name: 'education_level')  IList<DictionaryItem> educationLevels, @JsonKey(name: 'currency')  IList<Currency> currencies, @JsonKey(name: 'vacancy_billing_type')  IList<DictionaryItem> vacancyBillingTypes, @JsonKey(name: 'applicant_comment_access_type')  IList<DictionaryItem> applicantCommentAccessTypes, @JsonKey(name: 'vacancy_cluster')  IList<DictionaryItem> vacancyClusters, @JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson)  ISet<String> driverLicenseTypes, @JsonKey(name: 'language_level')  IList<DictionaryItem> languageLevels, @JsonKey(name: 'working_days')  IList<DictionaryItem> workingDays, @JsonKey(name: 'working_time_intervals')  IList<DictionaryItem> workingTimeIntervals, @JsonKey(name: 'working_time_modes')  IList<DictionaryItem> workingTimeModes, @JsonKey(name: 'vacancy_type')  IList<DictionaryItem> vacancyTypes, @JsonKey(name: 'job_search_statuses_applicant')  IList<DictionaryItem> jobSearchStatusesApplicants, @JsonKey(name: 'job_search_statuses_employer')  IList<DictionaryItem> jobSearchStatusesEmployers, @JsonKey(name: 'employment_form')  IList<DictionaryItem> employmentForms, @JsonKey(name: 'work_format')  IList<DictionaryItem> workFormats, @JsonKey(name: 'working_hours')  IList<DictionaryItem> workingHours, @JsonKey(name: 'fly_in_fly_out_duration')  IList<DictionaryItem> flyInFlyOutDurations, @JsonKey(name: 'work_schedule_by_days')  IList<DictionaryItem> workScheduleByDays, @JsonKey(name: 'salary_range_mode')  IList<DictionaryItem> salaryRangeModes, @JsonKey(name: 'salary_range_frequency')  IList<DictionaryItem> salaryRangeFrequencies, @JsonKey(name: 'resume_search_label')  IList<DictionaryItem> resumeSearchLabels, @JsonKey(name: 'resume_search_relocation')  IList<DictionaryItem> resumeSearchRelocations, @JsonKey(name: 'resume_search_order')  IList<DictionaryItem> resumeSearchOrders, @JsonKey(name: 'resume_search_experience_period')  IList<DictionaryItem> resumeSearchExperiencePeriods)  $default,) {final _that = this;
switch (_that) {
case _HhDictionaries():
return $default(_that.resumeAccessTypes,_that.vacancySearchOrders,_that.vacancySearchFields,_that.gender,_that.preferredContactTypes,_that.travelTime,_that.relocationTypes,_that.businessTripReadiness,_that.resumeContactsSiteTypes,_that.employerTypes,_that.employerRelations,_that.negotiationsStates,_that.applicantNegotiationStatuses,_that.negotiationsParticipantTypes,_that.negotiationsOrders,_that.resumeModerationNotes,_that.vacancyRelations,_that.resumeStatuses,_that.resumeSearchLogics,_that.resumeSearchFields,_that.messagingStatuses,_that.employerActiveVacanciesOrders,_that.employerArchivedVacanciesOrders,_that.employerHiddenVacanciesOrders,_that.applicantCommentsOrders,_that.vacancyNotProlongedReasons,_that.resumeHiddenFields,_that.phoneCallStatuses,_that.vacancyLabels,_that.experiences,_that.employments,_that.schedules,_that.educationLevels,_that.currencies,_that.vacancyBillingTypes,_that.applicantCommentAccessTypes,_that.vacancyClusters,_that.driverLicenseTypes,_that.languageLevels,_that.workingDays,_that.workingTimeIntervals,_that.workingTimeModes,_that.vacancyTypes,_that.jobSearchStatusesApplicants,_that.jobSearchStatusesEmployers,_that.employmentForms,_that.workFormats,_that.workingHours,_that.flyInFlyOutDurations,_that.workScheduleByDays,_that.salaryRangeModes,_that.salaryRangeFrequencies,_that.resumeSearchLabels,_that.resumeSearchRelocations,_that.resumeSearchOrders,_that.resumeSearchExperiencePeriods);case _:
  throw StateError('Unexpected subclass');

}
}
/// A variant of `when` that fallback to returning `null`
///
/// It is equivalent to doing:
/// ```dart
/// switch (sealedClass) {
///   case Subclass(:final field):
///     return ...;
///   case _:
///     return null;
/// }
/// ```

@optionalTypeArgs TResult? whenOrNull<TResult extends Object?>(TResult? Function(@JsonKey(name: 'resume_access_type')  IList<DictionaryItem> resumeAccessTypes, @JsonKey(name: 'vacancy_search_order')  IList<DictionaryItem> vacancySearchOrders, @JsonKey(name: 'vacancy_search_fields')  IList<DictionaryItem> vacancySearchFields, @JsonKey(name: 'gender')  IList<DictionaryItem> gender, @JsonKey(name: 'preferred_contact_type')  IList<DictionaryItem> preferredContactTypes, @JsonKey(name: 'travel_time')  IList<DictionaryItem> travelTime, @JsonKey(name: 'relocation_type')  IList<DictionaryItem> relocationTypes, @JsonKey(name: 'business_trip_readiness')  IList<DictionaryItem> businessTripReadiness, @JsonKey(name: 'resume_contacts_site_type')  IList<DictionaryItem> resumeContactsSiteTypes, @JsonKey(name: 'employer_type')  IList<DictionaryItem> employerTypes, @JsonKey(name: 'employer_relation')  IList<DictionaryItem> employerRelations, @JsonKey(name: 'negotiations_state')  IList<DictionaryItem> negotiationsStates, @JsonKey(name: 'applicant_negotiation_status')  IList<DictionaryItem> applicantNegotiationStatuses, @JsonKey(name: 'negotiations_participant_type')  IList<DictionaryItem> negotiationsParticipantTypes, @JsonKey(name: 'negotiations_order')  IList<DictionaryItem> negotiationsOrders, @JsonKey(name: 'resume_moderation_note')  IList<DictionaryItem> resumeModerationNotes, @JsonKey(name: 'vacancy_relation')  IList<DictionaryItem> vacancyRelations, @JsonKey(name: 'resume_status')  IList<DictionaryItem> resumeStatuses, @JsonKey(name: 'resume_search_logic')  IList<DictionaryItem> resumeSearchLogics, @JsonKey(name: 'resume_search_fields')  IList<DictionaryItem> resumeSearchFields, @JsonKey(name: 'messaging_status')  IList<DictionaryItem> messagingStatuses, @JsonKey(name: 'employer_active_vacancies_order')  IList<DictionaryItem> employerActiveVacanciesOrders, @JsonKey(name: 'employer_archived_vacancies_order')  IList<DictionaryItem> employerArchivedVacanciesOrders, @JsonKey(name: 'employer_hidden_vacancies_order')  IList<DictionaryItem> employerHiddenVacanciesOrders, @JsonKey(name: 'applicant_comments_order')  IList<DictionaryItem> applicantCommentsOrders, @JsonKey(name: 'vacancy_not_prolonged_reason')  IList<DictionaryItem> vacancyNotProlongedReasons, @JsonKey(name: 'resume_hidden_fields')  IList<DictionaryItem> resumeHiddenFields, @JsonKey(name: 'phone_call_status')  IList<DictionaryItem> phoneCallStatuses, @JsonKey(name: 'vacancy_label')  IList<DictionaryItem> vacancyLabels, @JsonKey(name: 'experience')  IList<DictionaryItem> experiences, @JsonKey(name: 'employment')  IList<DictionaryItem> employments, @JsonKey(name: 'schedule')  IList<DictionaryItem> schedules, @JsonKey(name: 'education_level')  IList<DictionaryItem> educationLevels, @JsonKey(name: 'currency')  IList<Currency> currencies, @JsonKey(name: 'vacancy_billing_type')  IList<DictionaryItem> vacancyBillingTypes, @JsonKey(name: 'applicant_comment_access_type')  IList<DictionaryItem> applicantCommentAccessTypes, @JsonKey(name: 'vacancy_cluster')  IList<DictionaryItem> vacancyClusters, @JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson)  ISet<String> driverLicenseTypes, @JsonKey(name: 'language_level')  IList<DictionaryItem> languageLevels, @JsonKey(name: 'working_days')  IList<DictionaryItem> workingDays, @JsonKey(name: 'working_time_intervals')  IList<DictionaryItem> workingTimeIntervals, @JsonKey(name: 'working_time_modes')  IList<DictionaryItem> workingTimeModes, @JsonKey(name: 'vacancy_type')  IList<DictionaryItem> vacancyTypes, @JsonKey(name: 'job_search_statuses_applicant')  IList<DictionaryItem> jobSearchStatusesApplicants, @JsonKey(name: 'job_search_statuses_employer')  IList<DictionaryItem> jobSearchStatusesEmployers, @JsonKey(name: 'employment_form')  IList<DictionaryItem> employmentForms, @JsonKey(name: 'work_format')  IList<DictionaryItem> workFormats, @JsonKey(name: 'working_hours')  IList<DictionaryItem> workingHours, @JsonKey(name: 'fly_in_fly_out_duration')  IList<DictionaryItem> flyInFlyOutDurations, @JsonKey(name: 'work_schedule_by_days')  IList<DictionaryItem> workScheduleByDays, @JsonKey(name: 'salary_range_mode')  IList<DictionaryItem> salaryRangeModes, @JsonKey(name: 'salary_range_frequency')  IList<DictionaryItem> salaryRangeFrequencies, @JsonKey(name: 'resume_search_label')  IList<DictionaryItem> resumeSearchLabels, @JsonKey(name: 'resume_search_relocation')  IList<DictionaryItem> resumeSearchRelocations, @JsonKey(name: 'resume_search_order')  IList<DictionaryItem> resumeSearchOrders, @JsonKey(name: 'resume_search_experience_period')  IList<DictionaryItem> resumeSearchExperiencePeriods)?  $default,) {final _that = this;
switch (_that) {
case _HhDictionaries() when $default != null:
return $default(_that.resumeAccessTypes,_that.vacancySearchOrders,_that.vacancySearchFields,_that.gender,_that.preferredContactTypes,_that.travelTime,_that.relocationTypes,_that.businessTripReadiness,_that.resumeContactsSiteTypes,_that.employerTypes,_that.employerRelations,_that.negotiationsStates,_that.applicantNegotiationStatuses,_that.negotiationsParticipantTypes,_that.negotiationsOrders,_that.resumeModerationNotes,_that.vacancyRelations,_that.resumeStatuses,_that.resumeSearchLogics,_that.resumeSearchFields,_that.messagingStatuses,_that.employerActiveVacanciesOrders,_that.employerArchivedVacanciesOrders,_that.employerHiddenVacanciesOrders,_that.applicantCommentsOrders,_that.vacancyNotProlongedReasons,_that.resumeHiddenFields,_that.phoneCallStatuses,_that.vacancyLabels,_that.experiences,_that.employments,_that.schedules,_that.educationLevels,_that.currencies,_that.vacancyBillingTypes,_that.applicantCommentAccessTypes,_that.vacancyClusters,_that.driverLicenseTypes,_that.languageLevels,_that.workingDays,_that.workingTimeIntervals,_that.workingTimeModes,_that.vacancyTypes,_that.jobSearchStatusesApplicants,_that.jobSearchStatusesEmployers,_that.employmentForms,_that.workFormats,_that.workingHours,_that.flyInFlyOutDurations,_that.workScheduleByDays,_that.salaryRangeModes,_that.salaryRangeFrequencies,_that.resumeSearchLabels,_that.resumeSearchRelocations,_that.resumeSearchOrders,_that.resumeSearchExperiencePeriods);case _:
  return null;

}
}

}

/// @nodoc
@JsonSerializable()

class _HhDictionaries implements HhDictionaries {
  const _HhDictionaries({@JsonKey(name: 'resume_access_type') required this.resumeAccessTypes, @JsonKey(name: 'vacancy_search_order') required this.vacancySearchOrders, @JsonKey(name: 'vacancy_search_fields') required this.vacancySearchFields, @JsonKey(name: 'gender') required this.gender, @JsonKey(name: 'preferred_contact_type') required this.preferredContactTypes, @JsonKey(name: 'travel_time') required this.travelTime, @JsonKey(name: 'relocation_type') required this.relocationTypes, @JsonKey(name: 'business_trip_readiness') required this.businessTripReadiness, @JsonKey(name: 'resume_contacts_site_type') required this.resumeContactsSiteTypes, @JsonKey(name: 'employer_type') required this.employerTypes, @JsonKey(name: 'employer_relation') required this.employerRelations, @JsonKey(name: 'negotiations_state') required this.negotiationsStates, @JsonKey(name: 'applicant_negotiation_status') required this.applicantNegotiationStatuses, @JsonKey(name: 'negotiations_participant_type') required this.negotiationsParticipantTypes, @JsonKey(name: 'negotiations_order') required this.negotiationsOrders, @JsonKey(name: 'resume_moderation_note') required this.resumeModerationNotes, @JsonKey(name: 'vacancy_relation') required this.vacancyRelations, @JsonKey(name: 'resume_status') required this.resumeStatuses, @JsonKey(name: 'resume_search_logic') required this.resumeSearchLogics, @JsonKey(name: 'resume_search_fields') required this.resumeSearchFields, @JsonKey(name: 'messaging_status') required this.messagingStatuses, @JsonKey(name: 'employer_active_vacancies_order') required this.employerActiveVacanciesOrders, @JsonKey(name: 'employer_archived_vacancies_order') required this.employerArchivedVacanciesOrders, @JsonKey(name: 'employer_hidden_vacancies_order') required this.employerHiddenVacanciesOrders, @JsonKey(name: 'applicant_comments_order') required this.applicantCommentsOrders, @JsonKey(name: 'vacancy_not_prolonged_reason') required this.vacancyNotProlongedReasons, @JsonKey(name: 'resume_hidden_fields') required this.resumeHiddenFields, @JsonKey(name: 'phone_call_status') required this.phoneCallStatuses, @JsonKey(name: 'vacancy_label') required this.vacancyLabels, @JsonKey(name: 'experience') required this.experiences, @JsonKey(name: 'employment') required this.employments, @JsonKey(name: 'schedule') required this.schedules, @JsonKey(name: 'education_level') required this.educationLevels, @JsonKey(name: 'currency') required this.currencies, @JsonKey(name: 'vacancy_billing_type') required this.vacancyBillingTypes, @JsonKey(name: 'applicant_comment_access_type') required this.applicantCommentAccessTypes, @JsonKey(name: 'vacancy_cluster') required this.vacancyClusters, @JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson) required this.driverLicenseTypes, @JsonKey(name: 'language_level') required this.languageLevels, @JsonKey(name: 'working_days') required this.workingDays, @JsonKey(name: 'working_time_intervals') required this.workingTimeIntervals, @JsonKey(name: 'working_time_modes') required this.workingTimeModes, @JsonKey(name: 'vacancy_type') required this.vacancyTypes, @JsonKey(name: 'job_search_statuses_applicant') required this.jobSearchStatusesApplicants, @JsonKey(name: 'job_search_statuses_employer') required this.jobSearchStatusesEmployers, @JsonKey(name: 'employment_form') required this.employmentForms, @JsonKey(name: 'work_format') required this.workFormats, @JsonKey(name: 'working_hours') required this.workingHours, @JsonKey(name: 'fly_in_fly_out_duration') required this.flyInFlyOutDurations, @JsonKey(name: 'work_schedule_by_days') required this.workScheduleByDays, @JsonKey(name: 'salary_range_mode') required this.salaryRangeModes, @JsonKey(name: 'salary_range_frequency') required this.salaryRangeFrequencies, @JsonKey(name: 'resume_search_label') required this.resumeSearchLabels, @JsonKey(name: 'resume_search_relocation') required this.resumeSearchRelocations, @JsonKey(name: 'resume_search_order') required this.resumeSearchOrders, @JsonKey(name: 'resume_search_experience_period') required this.resumeSearchExperiencePeriods});
  factory _HhDictionaries.fromJson(Map<String, dynamic> json) => _$HhDictionariesFromJson(json);

@override@JsonKey(name: 'resume_access_type') final  IList<DictionaryItem> resumeAccessTypes;
@override@JsonKey(name: 'vacancy_search_order') final  IList<DictionaryItem> vacancySearchOrders;
@override@JsonKey(name: 'vacancy_search_fields') final  IList<DictionaryItem> vacancySearchFields;
@override@JsonKey(name: 'gender') final  IList<DictionaryItem> gender;
@override@JsonKey(name: 'preferred_contact_type') final  IList<DictionaryItem> preferredContactTypes;
@override@JsonKey(name: 'travel_time') final  IList<DictionaryItem> travelTime;
@override@JsonKey(name: 'relocation_type') final  IList<DictionaryItem> relocationTypes;
@override@JsonKey(name: 'business_trip_readiness') final  IList<DictionaryItem> businessTripReadiness;
@override@JsonKey(name: 'resume_contacts_site_type') final  IList<DictionaryItem> resumeContactsSiteTypes;
@override@JsonKey(name: 'employer_type') final  IList<DictionaryItem> employerTypes;
@override@JsonKey(name: 'employer_relation') final  IList<DictionaryItem> employerRelations;
@override@JsonKey(name: 'negotiations_state') final  IList<DictionaryItem> negotiationsStates;
@override@JsonKey(name: 'applicant_negotiation_status') final  IList<DictionaryItem> applicantNegotiationStatuses;
@override@JsonKey(name: 'negotiations_participant_type') final  IList<DictionaryItem> negotiationsParticipantTypes;
@override@JsonKey(name: 'negotiations_order') final  IList<DictionaryItem> negotiationsOrders;
@override@JsonKey(name: 'resume_moderation_note') final  IList<DictionaryItem> resumeModerationNotes;
@override@JsonKey(name: 'vacancy_relation') final  IList<DictionaryItem> vacancyRelations;
@override@JsonKey(name: 'resume_status') final  IList<DictionaryItem> resumeStatuses;
@override@JsonKey(name: 'resume_search_logic') final  IList<DictionaryItem> resumeSearchLogics;
@override@JsonKey(name: 'resume_search_fields') final  IList<DictionaryItem> resumeSearchFields;
@override@JsonKey(name: 'messaging_status') final  IList<DictionaryItem> messagingStatuses;
@override@JsonKey(name: 'employer_active_vacancies_order') final  IList<DictionaryItem> employerActiveVacanciesOrders;
@override@JsonKey(name: 'employer_archived_vacancies_order') final  IList<DictionaryItem> employerArchivedVacanciesOrders;
@override@JsonKey(name: 'employer_hidden_vacancies_order') final  IList<DictionaryItem> employerHiddenVacanciesOrders;
@override@JsonKey(name: 'applicant_comments_order') final  IList<DictionaryItem> applicantCommentsOrders;
@override@JsonKey(name: 'vacancy_not_prolonged_reason') final  IList<DictionaryItem> vacancyNotProlongedReasons;
@override@JsonKey(name: 'resume_hidden_fields') final  IList<DictionaryItem> resumeHiddenFields;
@override@JsonKey(name: 'phone_call_status') final  IList<DictionaryItem> phoneCallStatuses;
@override@JsonKey(name: 'vacancy_label') final  IList<DictionaryItem> vacancyLabels;
@override@JsonKey(name: 'experience') final  IList<DictionaryItem> experiences;
@override@JsonKey(name: 'employment') final  IList<DictionaryItem> employments;
@override@JsonKey(name: 'schedule') final  IList<DictionaryItem> schedules;
@override@JsonKey(name: 'education_level') final  IList<DictionaryItem> educationLevels;
@override@JsonKey(name: 'currency') final  IList<Currency> currencies;
@override@JsonKey(name: 'vacancy_billing_type') final  IList<DictionaryItem> vacancyBillingTypes;
@override@JsonKey(name: 'applicant_comment_access_type') final  IList<DictionaryItem> applicantCommentAccessTypes;
@override@JsonKey(name: 'vacancy_cluster') final  IList<DictionaryItem> vacancyClusters;
@override@JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson) final  ISet<String> driverLicenseTypes;
@override@JsonKey(name: 'language_level') final  IList<DictionaryItem> languageLevels;
@override@JsonKey(name: 'working_days') final  IList<DictionaryItem> workingDays;
@override@JsonKey(name: 'working_time_intervals') final  IList<DictionaryItem> workingTimeIntervals;
@override@JsonKey(name: 'working_time_modes') final  IList<DictionaryItem> workingTimeModes;
@override@JsonKey(name: 'vacancy_type') final  IList<DictionaryItem> vacancyTypes;
@override@JsonKey(name: 'job_search_statuses_applicant') final  IList<DictionaryItem> jobSearchStatusesApplicants;
@override@JsonKey(name: 'job_search_statuses_employer') final  IList<DictionaryItem> jobSearchStatusesEmployers;
@override@JsonKey(name: 'employment_form') final  IList<DictionaryItem> employmentForms;
@override@JsonKey(name: 'work_format') final  IList<DictionaryItem> workFormats;
@override@JsonKey(name: 'working_hours') final  IList<DictionaryItem> workingHours;
@override@JsonKey(name: 'fly_in_fly_out_duration') final  IList<DictionaryItem> flyInFlyOutDurations;
@override@JsonKey(name: 'work_schedule_by_days') final  IList<DictionaryItem> workScheduleByDays;
@override@JsonKey(name: 'salary_range_mode') final  IList<DictionaryItem> salaryRangeModes;
@override@JsonKey(name: 'salary_range_frequency') final  IList<DictionaryItem> salaryRangeFrequencies;
@override@JsonKey(name: 'resume_search_label') final  IList<DictionaryItem> resumeSearchLabels;
@override@JsonKey(name: 'resume_search_relocation') final  IList<DictionaryItem> resumeSearchRelocations;
@override@JsonKey(name: 'resume_search_order') final  IList<DictionaryItem> resumeSearchOrders;
@override@JsonKey(name: 'resume_search_experience_period') final  IList<DictionaryItem> resumeSearchExperiencePeriods;

/// Create a copy of HhDictionaries
/// with the given fields replaced by the non-null parameter values.
@override @JsonKey(includeFromJson: false, includeToJson: false)
@pragma('vm:prefer-inline')
_$HhDictionariesCopyWith<_HhDictionaries> get copyWith => __$HhDictionariesCopyWithImpl<_HhDictionaries>(this, _$identity);

@override
Map<String, dynamic> toJson() {
  return _$HhDictionariesToJson(this, );
}

@override
bool operator ==(Object other) {
  return identical(this, other) || (other.runtimeType == runtimeType&&other is _HhDictionaries&&const DeepCollectionEquality().equals(other.resumeAccessTypes, resumeAccessTypes)&&const DeepCollectionEquality().equals(other.vacancySearchOrders, vacancySearchOrders)&&const DeepCollectionEquality().equals(other.vacancySearchFields, vacancySearchFields)&&const DeepCollectionEquality().equals(other.gender, gender)&&const DeepCollectionEquality().equals(other.preferredContactTypes, preferredContactTypes)&&const DeepCollectionEquality().equals(other.travelTime, travelTime)&&const DeepCollectionEquality().equals(other.relocationTypes, relocationTypes)&&const DeepCollectionEquality().equals(other.businessTripReadiness, businessTripReadiness)&&const DeepCollectionEquality().equals(other.resumeContactsSiteTypes, resumeContactsSiteTypes)&&const DeepCollectionEquality().equals(other.employerTypes, employerTypes)&&const DeepCollectionEquality().equals(other.employerRelations, employerRelations)&&const DeepCollectionEquality().equals(other.negotiationsStates, negotiationsStates)&&const DeepCollectionEquality().equals(other.applicantNegotiationStatuses, applicantNegotiationStatuses)&&const DeepCollectionEquality().equals(other.negotiationsParticipantTypes, negotiationsParticipantTypes)&&const DeepCollectionEquality().equals(other.negotiationsOrders, negotiationsOrders)&&const DeepCollectionEquality().equals(other.resumeModerationNotes, resumeModerationNotes)&&const DeepCollectionEquality().equals(other.vacancyRelations, vacancyRelations)&&const DeepCollectionEquality().equals(other.resumeStatuses, resumeStatuses)&&const DeepCollectionEquality().equals(other.resumeSearchLogics, resumeSearchLogics)&&const DeepCollectionEquality().equals(other.resumeSearchFields, resumeSearchFields)&&const DeepCollectionEquality().equals(other.messagingStatuses, messagingStatuses)&&const DeepCollectionEquality().equals(other.employerActiveVacanciesOrders, employerActiveVacanciesOrders)&&const DeepCollectionEquality().equals(other.employerArchivedVacanciesOrders, employerArchivedVacanciesOrders)&&const DeepCollectionEquality().equals(other.employerHiddenVacanciesOrders, employerHiddenVacanciesOrders)&&const DeepCollectionEquality().equals(other.applicantCommentsOrders, applicantCommentsOrders)&&const DeepCollectionEquality().equals(other.vacancyNotProlongedReasons, vacancyNotProlongedReasons)&&const DeepCollectionEquality().equals(other.resumeHiddenFields, resumeHiddenFields)&&const DeepCollectionEquality().equals(other.phoneCallStatuses, phoneCallStatuses)&&const DeepCollectionEquality().equals(other.vacancyLabels, vacancyLabels)&&const DeepCollectionEquality().equals(other.experiences, experiences)&&const DeepCollectionEquality().equals(other.employments, employments)&&const DeepCollectionEquality().equals(other.schedules, schedules)&&const DeepCollectionEquality().equals(other.educationLevels, educationLevels)&&const DeepCollectionEquality().equals(other.currencies, currencies)&&const DeepCollectionEquality().equals(other.vacancyBillingTypes, vacancyBillingTypes)&&const DeepCollectionEquality().equals(other.applicantCommentAccessTypes, applicantCommentAccessTypes)&&const DeepCollectionEquality().equals(other.vacancyClusters, vacancyClusters)&&const DeepCollectionEquality().equals(other.driverLicenseTypes, driverLicenseTypes)&&const DeepCollectionEquality().equals(other.languageLevels, languageLevels)&&const DeepCollectionEquality().equals(other.workingDays, workingDays)&&const DeepCollectionEquality().equals(other.workingTimeIntervals, workingTimeIntervals)&&const DeepCollectionEquality().equals(other.workingTimeModes, workingTimeModes)&&const DeepCollectionEquality().equals(other.vacancyTypes, vacancyTypes)&&const DeepCollectionEquality().equals(other.jobSearchStatusesApplicants, jobSearchStatusesApplicants)&&const DeepCollectionEquality().equals(other.jobSearchStatusesEmployers, jobSearchStatusesEmployers)&&const DeepCollectionEquality().equals(other.employmentForms, employmentForms)&&const DeepCollectionEquality().equals(other.workFormats, workFormats)&&const DeepCollectionEquality().equals(other.workingHours, workingHours)&&const DeepCollectionEquality().equals(other.flyInFlyOutDurations, flyInFlyOutDurations)&&const DeepCollectionEquality().equals(other.workScheduleByDays, workScheduleByDays)&&const DeepCollectionEquality().equals(other.salaryRangeModes, salaryRangeModes)&&const DeepCollectionEquality().equals(other.salaryRangeFrequencies, salaryRangeFrequencies)&&const DeepCollectionEquality().equals(other.resumeSearchLabels, resumeSearchLabels)&&const DeepCollectionEquality().equals(other.resumeSearchRelocations, resumeSearchRelocations)&&const DeepCollectionEquality().equals(other.resumeSearchOrders, resumeSearchOrders)&&const DeepCollectionEquality().equals(other.resumeSearchExperiencePeriods, resumeSearchExperiencePeriods));
}

@JsonKey(includeFromJson: false, includeToJson: false)
@override
int get hashCode => Object.hashAll([runtimeType,const DeepCollectionEquality().hash(resumeAccessTypes),const DeepCollectionEquality().hash(vacancySearchOrders),const DeepCollectionEquality().hash(vacancySearchFields),const DeepCollectionEquality().hash(gender),const DeepCollectionEquality().hash(preferredContactTypes),const DeepCollectionEquality().hash(travelTime),const DeepCollectionEquality().hash(relocationTypes),const DeepCollectionEquality().hash(businessTripReadiness),const DeepCollectionEquality().hash(resumeContactsSiteTypes),const DeepCollectionEquality().hash(employerTypes),const DeepCollectionEquality().hash(employerRelations),const DeepCollectionEquality().hash(negotiationsStates),const DeepCollectionEquality().hash(applicantNegotiationStatuses),const DeepCollectionEquality().hash(negotiationsParticipantTypes),const DeepCollectionEquality().hash(negotiationsOrders),const DeepCollectionEquality().hash(resumeModerationNotes),const DeepCollectionEquality().hash(vacancyRelations),const DeepCollectionEquality().hash(resumeStatuses),const DeepCollectionEquality().hash(resumeSearchLogics),const DeepCollectionEquality().hash(resumeSearchFields),const DeepCollectionEquality().hash(messagingStatuses),const DeepCollectionEquality().hash(employerActiveVacanciesOrders),const DeepCollectionEquality().hash(employerArchivedVacanciesOrders),const DeepCollectionEquality().hash(employerHiddenVacanciesOrders),const DeepCollectionEquality().hash(applicantCommentsOrders),const DeepCollectionEquality().hash(vacancyNotProlongedReasons),const DeepCollectionEquality().hash(resumeHiddenFields),const DeepCollectionEquality().hash(phoneCallStatuses),const DeepCollectionEquality().hash(vacancyLabels),const DeepCollectionEquality().hash(experiences),const DeepCollectionEquality().hash(employments),const DeepCollectionEquality().hash(schedules),const DeepCollectionEquality().hash(educationLevels),const DeepCollectionEquality().hash(currencies),const DeepCollectionEquality().hash(vacancyBillingTypes),const DeepCollectionEquality().hash(applicantCommentAccessTypes),const DeepCollectionEquality().hash(vacancyClusters),const DeepCollectionEquality().hash(driverLicenseTypes),const DeepCollectionEquality().hash(languageLevels),const DeepCollectionEquality().hash(workingDays),const DeepCollectionEquality().hash(workingTimeIntervals),const DeepCollectionEquality().hash(workingTimeModes),const DeepCollectionEquality().hash(vacancyTypes),const DeepCollectionEquality().hash(jobSearchStatusesApplicants),const DeepCollectionEquality().hash(jobSearchStatusesEmployers),const DeepCollectionEquality().hash(employmentForms),const DeepCollectionEquality().hash(workFormats),const DeepCollectionEquality().hash(workingHours),const DeepCollectionEquality().hash(flyInFlyOutDurations),const DeepCollectionEquality().hash(workScheduleByDays),const DeepCollectionEquality().hash(salaryRangeModes),const DeepCollectionEquality().hash(salaryRangeFrequencies),const DeepCollectionEquality().hash(resumeSearchLabels),const DeepCollectionEquality().hash(resumeSearchRelocations),const DeepCollectionEquality().hash(resumeSearchOrders),const DeepCollectionEquality().hash(resumeSearchExperiencePeriods)]);

@override
String toString() {
  return 'HhDictionaries(resumeAccessTypes: $resumeAccessTypes, vacancySearchOrders: $vacancySearchOrders, vacancySearchFields: $vacancySearchFields, gender: $gender, preferredContactTypes: $preferredContactTypes, travelTime: $travelTime, relocationTypes: $relocationTypes, businessTripReadiness: $businessTripReadiness, resumeContactsSiteTypes: $resumeContactsSiteTypes, employerTypes: $employerTypes, employerRelations: $employerRelations, negotiationsStates: $negotiationsStates, applicantNegotiationStatuses: $applicantNegotiationStatuses, negotiationsParticipantTypes: $negotiationsParticipantTypes, negotiationsOrders: $negotiationsOrders, resumeModerationNotes: $resumeModerationNotes, vacancyRelations: $vacancyRelations, resumeStatuses: $resumeStatuses, resumeSearchLogics: $resumeSearchLogics, resumeSearchFields: $resumeSearchFields, messagingStatuses: $messagingStatuses, employerActiveVacanciesOrders: $employerActiveVacanciesOrders, employerArchivedVacanciesOrders: $employerArchivedVacanciesOrders, employerHiddenVacanciesOrders: $employerHiddenVacanciesOrders, applicantCommentsOrders: $applicantCommentsOrders, vacancyNotProlongedReasons: $vacancyNotProlongedReasons, resumeHiddenFields: $resumeHiddenFields, phoneCallStatuses: $phoneCallStatuses, vacancyLabels: $vacancyLabels, experiences: $experiences, employments: $employments, schedules: $schedules, educationLevels: $educationLevels, currencies: $currencies, vacancyBillingTypes: $vacancyBillingTypes, applicantCommentAccessTypes: $applicantCommentAccessTypes, vacancyClusters: $vacancyClusters, driverLicenseTypes: $driverLicenseTypes, languageLevels: $languageLevels, workingDays: $workingDays, workingTimeIntervals: $workingTimeIntervals, workingTimeModes: $workingTimeModes, vacancyTypes: $vacancyTypes, jobSearchStatusesApplicants: $jobSearchStatusesApplicants, jobSearchStatusesEmployers: $jobSearchStatusesEmployers, employmentForms: $employmentForms, workFormats: $workFormats, workingHours: $workingHours, flyInFlyOutDurations: $flyInFlyOutDurations, workScheduleByDays: $workScheduleByDays, salaryRangeModes: $salaryRangeModes, salaryRangeFrequencies: $salaryRangeFrequencies, resumeSearchLabels: $resumeSearchLabels, resumeSearchRelocations: $resumeSearchRelocations, resumeSearchOrders: $resumeSearchOrders, resumeSearchExperiencePeriods: $resumeSearchExperiencePeriods)';
}


}

/// @nodoc
abstract mixin class _$HhDictionariesCopyWith<$Res> implements $HhDictionariesCopyWith<$Res> {
  factory _$HhDictionariesCopyWith(_HhDictionaries value, $Res Function(_HhDictionaries) _then) = __$HhDictionariesCopyWithImpl;
@override @useResult
$Res call({
@JsonKey(name: 'resume_access_type') IList<DictionaryItem> resumeAccessTypes,@JsonKey(name: 'vacancy_search_order') IList<DictionaryItem> vacancySearchOrders,@JsonKey(name: 'vacancy_search_fields') IList<DictionaryItem> vacancySearchFields,@JsonKey(name: 'gender') IList<DictionaryItem> gender,@JsonKey(name: 'preferred_contact_type') IList<DictionaryItem> preferredContactTypes,@JsonKey(name: 'travel_time') IList<DictionaryItem> travelTime,@JsonKey(name: 'relocation_type') IList<DictionaryItem> relocationTypes,@JsonKey(name: 'business_trip_readiness') IList<DictionaryItem> businessTripReadiness,@JsonKey(name: 'resume_contacts_site_type') IList<DictionaryItem> resumeContactsSiteTypes,@JsonKey(name: 'employer_type') IList<DictionaryItem> employerTypes,@JsonKey(name: 'employer_relation') IList<DictionaryItem> employerRelations,@JsonKey(name: 'negotiations_state') IList<DictionaryItem> negotiationsStates,@JsonKey(name: 'applicant_negotiation_status') IList<DictionaryItem> applicantNegotiationStatuses,@JsonKey(name: 'negotiations_participant_type') IList<DictionaryItem> negotiationsParticipantTypes,@JsonKey(name: 'negotiations_order') IList<DictionaryItem> negotiationsOrders,@JsonKey(name: 'resume_moderation_note') IList<DictionaryItem> resumeModerationNotes,@JsonKey(name: 'vacancy_relation') IList<DictionaryItem> vacancyRelations,@JsonKey(name: 'resume_status') IList<DictionaryItem> resumeStatuses,@JsonKey(name: 'resume_search_logic') IList<DictionaryItem> resumeSearchLogics,@JsonKey(name: 'resume_search_fields') IList<DictionaryItem> resumeSearchFields,@JsonKey(name: 'messaging_status') IList<DictionaryItem> messagingStatuses,@JsonKey(name: 'employer_active_vacancies_order') IList<DictionaryItem> employerActiveVacanciesOrders,@JsonKey(name: 'employer_archived_vacancies_order') IList<DictionaryItem> employerArchivedVacanciesOrders,@JsonKey(name: 'employer_hidden_vacancies_order') IList<DictionaryItem> employerHiddenVacanciesOrders,@JsonKey(name: 'applicant_comments_order') IList<DictionaryItem> applicantCommentsOrders,@JsonKey(name: 'vacancy_not_prolonged_reason') IList<DictionaryItem> vacancyNotProlongedReasons,@JsonKey(name: 'resume_hidden_fields') IList<DictionaryItem> resumeHiddenFields,@JsonKey(name: 'phone_call_status') IList<DictionaryItem> phoneCallStatuses,@JsonKey(name: 'vacancy_label') IList<DictionaryItem> vacancyLabels,@JsonKey(name: 'experience') IList<DictionaryItem> experiences,@JsonKey(name: 'employment') IList<DictionaryItem> employments,@JsonKey(name: 'schedule') IList<DictionaryItem> schedules,@JsonKey(name: 'education_level') IList<DictionaryItem> educationLevels,@JsonKey(name: 'currency') IList<Currency> currencies,@JsonKey(name: 'vacancy_billing_type') IList<DictionaryItem> vacancyBillingTypes,@JsonKey(name: 'applicant_comment_access_type') IList<DictionaryItem> applicantCommentAccessTypes,@JsonKey(name: 'vacancy_cluster') IList<DictionaryItem> vacancyClusters,@JsonKey(name: 'driver_license_types', fromJson: HhDictionaries._driverLicenseTypesFromJson, toJson: HhDictionaries._driverLicenseTypesToJson) ISet<String> driverLicenseTypes,@JsonKey(name: 'language_level') IList<DictionaryItem> languageLevels,@JsonKey(name: 'working_days') IList<DictionaryItem> workingDays,@JsonKey(name: 'working_time_intervals') IList<DictionaryItem> workingTimeIntervals,@JsonKey(name: 'working_time_modes') IList<DictionaryItem> workingTimeModes,@JsonKey(name: 'vacancy_type') IList<DictionaryItem> vacancyTypes,@JsonKey(name: 'job_search_statuses_applicant') IList<DictionaryItem> jobSearchStatusesApplicants,@JsonKey(name: 'job_search_statuses_employer') IList<DictionaryItem> jobSearchStatusesEmployers,@JsonKey(name: 'employment_form') IList<DictionaryItem> employmentForms,@JsonKey(name: 'work_format') IList<DictionaryItem> workFormats,@JsonKey(name: 'working_hours') IList<DictionaryItem> workingHours,@JsonKey(name: 'fly_in_fly_out_duration') IList<DictionaryItem> flyInFlyOutDurations,@JsonKey(name: 'work_schedule_by_days') IList<DictionaryItem> workScheduleByDays,@JsonKey(name: 'salary_range_mode') IList<DictionaryItem> salaryRangeModes,@JsonKey(name: 'salary_range_frequency') IList<DictionaryItem> salaryRangeFrequencies,@JsonKey(name: 'resume_search_label') IList<DictionaryItem> resumeSearchLabels,@JsonKey(name: 'resume_search_relocation') IList<DictionaryItem> resumeSearchRelocations,@JsonKey(name: 'resume_search_order') IList<DictionaryItem> resumeSearchOrders,@JsonKey(name: 'resume_search_experience_period') IList<DictionaryItem> resumeSearchExperiencePeriods
});




}
/// @nodoc
class __$HhDictionariesCopyWithImpl<$Res>
    implements _$HhDictionariesCopyWith<$Res> {
  __$HhDictionariesCopyWithImpl(this._self, this._then);

  final _HhDictionaries _self;
  final $Res Function(_HhDictionaries) _then;

/// Create a copy of HhDictionaries
/// with the given fields replaced by the non-null parameter values.
@override @pragma('vm:prefer-inline') $Res call({Object? resumeAccessTypes = null,Object? vacancySearchOrders = null,Object? vacancySearchFields = null,Object? gender = null,Object? preferredContactTypes = null,Object? travelTime = null,Object? relocationTypes = null,Object? businessTripReadiness = null,Object? resumeContactsSiteTypes = null,Object? employerTypes = null,Object? employerRelations = null,Object? negotiationsStates = null,Object? applicantNegotiationStatuses = null,Object? negotiationsParticipantTypes = null,Object? negotiationsOrders = null,Object? resumeModerationNotes = null,Object? vacancyRelations = null,Object? resumeStatuses = null,Object? resumeSearchLogics = null,Object? resumeSearchFields = null,Object? messagingStatuses = null,Object? employerActiveVacanciesOrders = null,Object? employerArchivedVacanciesOrders = null,Object? employerHiddenVacanciesOrders = null,Object? applicantCommentsOrders = null,Object? vacancyNotProlongedReasons = null,Object? resumeHiddenFields = null,Object? phoneCallStatuses = null,Object? vacancyLabels = null,Object? experiences = null,Object? employments = null,Object? schedules = null,Object? educationLevels = null,Object? currencies = null,Object? vacancyBillingTypes = null,Object? applicantCommentAccessTypes = null,Object? vacancyClusters = null,Object? driverLicenseTypes = null,Object? languageLevels = null,Object? workingDays = null,Object? workingTimeIntervals = null,Object? workingTimeModes = null,Object? vacancyTypes = null,Object? jobSearchStatusesApplicants = null,Object? jobSearchStatusesEmployers = null,Object? employmentForms = null,Object? workFormats = null,Object? workingHours = null,Object? flyInFlyOutDurations = null,Object? workScheduleByDays = null,Object? salaryRangeModes = null,Object? salaryRangeFrequencies = null,Object? resumeSearchLabels = null,Object? resumeSearchRelocations = null,Object? resumeSearchOrders = null,Object? resumeSearchExperiencePeriods = null,}) {
  return _then(_HhDictionaries(
resumeAccessTypes: null == resumeAccessTypes ? _self.resumeAccessTypes : resumeAccessTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancySearchOrders: null == vacancySearchOrders ? _self.vacancySearchOrders : vacancySearchOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancySearchFields: null == vacancySearchFields ? _self.vacancySearchFields : vacancySearchFields // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,gender: null == gender ? _self.gender : gender // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,preferredContactTypes: null == preferredContactTypes ? _self.preferredContactTypes : preferredContactTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,travelTime: null == travelTime ? _self.travelTime : travelTime // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,relocationTypes: null == relocationTypes ? _self.relocationTypes : relocationTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,businessTripReadiness: null == businessTripReadiness ? _self.businessTripReadiness : businessTripReadiness // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeContactsSiteTypes: null == resumeContactsSiteTypes ? _self.resumeContactsSiteTypes : resumeContactsSiteTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerTypes: null == employerTypes ? _self.employerTypes : employerTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerRelations: null == employerRelations ? _self.employerRelations : employerRelations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,negotiationsStates: null == negotiationsStates ? _self.negotiationsStates : negotiationsStates // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,applicantNegotiationStatuses: null == applicantNegotiationStatuses ? _self.applicantNegotiationStatuses : applicantNegotiationStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,negotiationsParticipantTypes: null == negotiationsParticipantTypes ? _self.negotiationsParticipantTypes : negotiationsParticipantTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,negotiationsOrders: null == negotiationsOrders ? _self.negotiationsOrders : negotiationsOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeModerationNotes: null == resumeModerationNotes ? _self.resumeModerationNotes : resumeModerationNotes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyRelations: null == vacancyRelations ? _self.vacancyRelations : vacancyRelations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeStatuses: null == resumeStatuses ? _self.resumeStatuses : resumeStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchLogics: null == resumeSearchLogics ? _self.resumeSearchLogics : resumeSearchLogics // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchFields: null == resumeSearchFields ? _self.resumeSearchFields : resumeSearchFields // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,messagingStatuses: null == messagingStatuses ? _self.messagingStatuses : messagingStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerActiveVacanciesOrders: null == employerActiveVacanciesOrders ? _self.employerActiveVacanciesOrders : employerActiveVacanciesOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerArchivedVacanciesOrders: null == employerArchivedVacanciesOrders ? _self.employerArchivedVacanciesOrders : employerArchivedVacanciesOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employerHiddenVacanciesOrders: null == employerHiddenVacanciesOrders ? _self.employerHiddenVacanciesOrders : employerHiddenVacanciesOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,applicantCommentsOrders: null == applicantCommentsOrders ? _self.applicantCommentsOrders : applicantCommentsOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyNotProlongedReasons: null == vacancyNotProlongedReasons ? _self.vacancyNotProlongedReasons : vacancyNotProlongedReasons // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeHiddenFields: null == resumeHiddenFields ? _self.resumeHiddenFields : resumeHiddenFields // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,phoneCallStatuses: null == phoneCallStatuses ? _self.phoneCallStatuses : phoneCallStatuses // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyLabels: null == vacancyLabels ? _self.vacancyLabels : vacancyLabels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,experiences: null == experiences ? _self.experiences : experiences // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employments: null == employments ? _self.employments : employments // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,schedules: null == schedules ? _self.schedules : schedules // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,educationLevels: null == educationLevels ? _self.educationLevels : educationLevels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,currencies: null == currencies ? _self.currencies : currencies // ignore: cast_nullable_to_non_nullable
as IList<Currency>,vacancyBillingTypes: null == vacancyBillingTypes ? _self.vacancyBillingTypes : vacancyBillingTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,applicantCommentAccessTypes: null == applicantCommentAccessTypes ? _self.applicantCommentAccessTypes : applicantCommentAccessTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyClusters: null == vacancyClusters ? _self.vacancyClusters : vacancyClusters // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,driverLicenseTypes: null == driverLicenseTypes ? _self.driverLicenseTypes : driverLicenseTypes // ignore: cast_nullable_to_non_nullable
as ISet<String>,languageLevels: null == languageLevels ? _self.languageLevels : languageLevels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingDays: null == workingDays ? _self.workingDays : workingDays // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingTimeIntervals: null == workingTimeIntervals ? _self.workingTimeIntervals : workingTimeIntervals // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingTimeModes: null == workingTimeModes ? _self.workingTimeModes : workingTimeModes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,vacancyTypes: null == vacancyTypes ? _self.vacancyTypes : vacancyTypes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,jobSearchStatusesApplicants: null == jobSearchStatusesApplicants ? _self.jobSearchStatusesApplicants : jobSearchStatusesApplicants // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,jobSearchStatusesEmployers: null == jobSearchStatusesEmployers ? _self.jobSearchStatusesEmployers : jobSearchStatusesEmployers // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,employmentForms: null == employmentForms ? _self.employmentForms : employmentForms // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workFormats: null == workFormats ? _self.workFormats : workFormats // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workingHours: null == workingHours ? _self.workingHours : workingHours // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,flyInFlyOutDurations: null == flyInFlyOutDurations ? _self.flyInFlyOutDurations : flyInFlyOutDurations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,workScheduleByDays: null == workScheduleByDays ? _self.workScheduleByDays : workScheduleByDays // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,salaryRangeModes: null == salaryRangeModes ? _self.salaryRangeModes : salaryRangeModes // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,salaryRangeFrequencies: null == salaryRangeFrequencies ? _self.salaryRangeFrequencies : salaryRangeFrequencies // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchLabels: null == resumeSearchLabels ? _self.resumeSearchLabels : resumeSearchLabels // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchRelocations: null == resumeSearchRelocations ? _self.resumeSearchRelocations : resumeSearchRelocations // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchOrders: null == resumeSearchOrders ? _self.resumeSearchOrders : resumeSearchOrders // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,resumeSearchExperiencePeriods: null == resumeSearchExperiencePeriods ? _self.resumeSearchExperiencePeriods : resumeSearchExperiencePeriods // ignore: cast_nullable_to_non_nullable
as IList<DictionaryItem>,
  ));
}


}

// dart format on
